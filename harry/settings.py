"""
Django settings for harry project.

Generated by 'django-admin startproject' using Django 1.9.6.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

SERVIDOR = str("http://localhost:8000")

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '1vq1r@dfb8wbvi_n#8ani73!!eub2th$qnvbahm7(kdl=x78c@'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'rest_framework',
    'rest_framework.authtoken',
    'rest_auth',
    'allauth',
    'allauth.account',
    'rest_auth.registration',
    'djcelery',   
    'kombu.transport.django',

    'usuario',
    'mapeo',
    'location',
    'alertas',
    'pushes'
]

PUSH_NOTIFICATIONS_SETTINGS = {
'GCM_API_KEY': 'AIzaSyAN6vt7INM9G1H7Cg9hEf2NzPO_lshPSbw',
#'APNS_CERTIFICATE': 'certificate.pem',
}


SITE_ID = 1

#This is required otherwise it asks for email server
#EMAIL_BACKEND = 'django.core.mail.backends.console.EmaiBackend'


# ACCOUNT_EMAIL_REQUIRED = True
# AUTHENTICATION_METHOD = 'EMAIL'
# ACCOUNT_EMAIL_VERIFICATION = 'optional'

ACCOUNT_AUTHENTICATION_METHOD = 'email'
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_USERNAME_REQUIRED = False

#Following is added to enable registration with email instead of username
AUTHENTICATION_BACKENDS = (
 #Needed to login by username in Django admin, regardless of `allauth`
    "django.contrib.auth.backends.ModelBackend",

# `allauth` specific authentication methods, such as login by e-mail
    "allauth.account.auth_backends.AuthenticationBackend",
  )

###PARA AUTENTICAR CON TOKEN
REST_FRAMEWORK = {
   #'DEFAULT_PERMISSION_CLASSES': ('rest_framework.permissions.IsAuthenticated',),
    'DEFAULT_AUTHENTICATION_CLASSES': ('rest_framework.authentication.sessionAuthentication',), #Autenticacion normal user pass
    'DEFAULT_AUTHENTICATION_CLASSES': ('rest_framework.authentication.TokenAuthentication',),   #Autenticacion por token
    'NON_FIELD_ERRORS_KEY':'error',


    #'DEFAULT_RENDERER_CLASSES': ( 'rest_framework.renderers.JSONRenderer',),

    #'DEFAULT_PERMISSION_CLASSES': ('rest_framework.permissions.AllowAny',),
    'PAGE_SIZE': 10
}


##REST_FRAMEWORK = {
  ##  'DEFAULT_PERMISSION_CLASSES': (
    ##    'rest_framework.permissions.IsAuthenticated',
   ## ),
   ## 'DEFAULT_AUTHENTICATION_CLASSES': (
    ##    'rest_framework.authentication.BasicAuthentication',
    ##),
##}

MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'harry.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'harry.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

DATABASES = {
    'default': {
        #'ATOMIC_REQUESTS': True,
        #'ENGINE': 'django.db.backends.sqlite3',
        #'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        # 'OPTIONS': {
        #  'read_default_file': '/harry/my.cnf',
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'harry',
        'USER': 'postgres',
        'PASSWORD': '84705200',
        'HOST': 'localhost', # Or an IP Address that your DB is hosted on
        'PORT': '5432',
        },

    }


# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'es-es'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/

#STATIC_URL = '/static/'
#MEDIA_ROOT = '/media/'
#MEDIA_ROOT = '/var/www/html/harryapp/img'

STATIC_URL = '/static/'

MEDIA_URL = '/media/'

#STATIC_ROOT = os.path.join(BASE_DIR,"static")

MEDIA_ROOT = os.path.join(os.path.dirname(os.path.dirname(__file__)), '', 'media')

#STATIC_ROOT = os.path.join(os.path.dirname(os.path.dirname(__file__)), '', 'static-only')

#STATICFILES_DIRS = (
    #os.path.join(os.path.dirname(os.path.dirname(__file__)), '', 'static'),
#)

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'media'),
)
#Celery config
BROKER_URL = 'django://'
